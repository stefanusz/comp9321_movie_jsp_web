-- MySQL Script generated by MySQL Workbench
-- Wed Oct  1 14:12:01 2014
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema movie
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `movie` ;
CREATE SCHEMA IF NOT EXISTS `movie` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `movie` ;

-- -----------------------------------------------------
-- Table `movie`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `movie`.`user` ;

CREATE TABLE IF NOT EXISTS `movie`.`user` (
  `userID` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(200) NOT NULL,
  `first_name` VARCHAR(70) NOT NULL,
  `last_name` VARCHAR(70) NOT NULL,
  `nickname` VARCHAR(50) NOT NULL,
  `email` VARCHAR(200) NOT NULL,
  `password` VARCHAR(200) NOT NULL,
  `role` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`userID`),
  UNIQUE INDEX `userID_UNIQUE` (`userID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie`.`cinema`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `movie`.`cinema` ;

CREATE TABLE IF NOT EXISTS `movie`.`cinema` (
  `cinemaID` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `location` VARCHAR(45) NOT NULL,
  `capacity` INT NOT NULL,
  PRIMARY KEY (`cinemaID`),
  UNIQUE INDEX `cinemaID_UNIQUE` (`cinemaID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie`.`amenities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `movie`.`amenities` ;

CREATE TABLE IF NOT EXISTS `movie`.`amenities` (
  `amenitiesID` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`amenitiesID`),
  UNIQUE INDEX `amenitiesID_UNIQUE` (`amenitiesID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie`.`resolveAmenities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `movie`.`resolveAmenities` ;

CREATE TABLE IF NOT EXISTS `movie`.`resolveAmenities` (
  `cinemaID` INT NOT NULL,
  `amenitiesID` INT NOT NULL,
  INDEX `fk_resolveAmenities_amenities1_idx` (`amenitiesID` ASC),
  CONSTRAINT `fk_resolveAmenities_cinema`
    FOREIGN KEY (`cinemaID`)
    REFERENCES `movie`.`cinema` (`cinemaID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_resolveAmenities_amenities1`
    FOREIGN KEY (`amenitiesID`)
    REFERENCES `movie`.`amenities` (`amenitiesID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie`.`movies`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `movie`.`movies` ;

CREATE TABLE IF NOT EXISTS `movie`.`movies` (
  `movieID` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NOT NULL,
  `poster` VARCHAR(45) NOT NULL,
  `director` VARCHAR(45) NOT NULL,
  `sypnosis` VARCHAR(45) NOT NULL,
  `rating` DECIMAL(2,4) NOT NULL,
  PRIMARY KEY (`movieID`),
  UNIQUE INDEX `movieID_UNIQUE` (`movieID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie`.`resolveMovies`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `movie`.`resolveMovies` ;

CREATE TABLE IF NOT EXISTS `movie`.`resolveMovies` (
  `resolveMoviesID` VARCHAR(45) NOT NULL,
  `releaseDate` VARCHAR(45) NOT NULL,
  `cinemaID` INT NOT NULL,
  `movieID` INT NOT NULL,
  INDEX `fk_table1_cinema1_idx` (`cinemaID` ASC),
  INDEX `fk_table1_movies1_idx` (`movieID` ASC),
  PRIMARY KEY (`resolveMoviesID`),
  UNIQUE INDEX `resolveMoviesID_UNIQUE` (`resolveMoviesID` ASC),
  CONSTRAINT `fk_table1_cinema1`
    FOREIGN KEY (`cinemaID`)
    REFERENCES `movie`.`cinema` (`cinemaID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_table1_movies1`
    FOREIGN KEY (`movieID`)
    REFERENCES `movie`.`movies` (`movieID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie`.`genre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `movie`.`genre` ;

CREATE TABLE IF NOT EXISTS `movie`.`genre` (
  `genreID` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`genreID`),
  UNIQUE INDEX `genreID_UNIQUE` (`genreID` ASC))
ENGINE = InnoDB
COMMENT = '	';


-- -----------------------------------------------------
-- Table `movie`.`resolveGenre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `movie`.`resolveGenre` ;

CREATE TABLE IF NOT EXISTS `movie`.`resolveGenre` (
  `movieID` INT NOT NULL,
  `genreID` INT NOT NULL,
  INDEX `fk_table1_movies2_idx` (`movieID` ASC),
  INDEX `fk_table1_genre1_idx` (`genreID` ASC),
  CONSTRAINT `fk_table1_movies2`
    FOREIGN KEY (`movieID`)
    REFERENCES `movie`.`movies` (`movieID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_table1_genre1`
    FOREIGN KEY (`genreID`)
    REFERENCES `movie`.`genre` (`genreID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie`.`actor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `movie`.`actor` ;

CREATE TABLE IF NOT EXISTS `movie`.`actor` (
  `actorID` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `gender` VARCHAR(45) NOT NULL,
  `DOB` DATE NOT NULL,
  PRIMARY KEY (`actorID`),
  UNIQUE INDEX `actorID_UNIQUE` (`actorID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie`.`resolveActor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `movie`.`resolveActor` ;

CREATE TABLE IF NOT EXISTS `movie`.`resolveActor` (
  `movieID` INT NOT NULL,
  `actorID` INT NOT NULL,
  INDEX `fk_resolveActor_movies1_idx` (`movieID` ASC),
  INDEX `fk_resolveActor_actor1_idx` (`actorID` ASC),
  CONSTRAINT `fk_resolveActor_movies1`
    FOREIGN KEY (`movieID`)
    REFERENCES `movie`.`movies` (`movieID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_resolveActor_actor1`
    FOREIGN KEY (`actorID`)
    REFERENCES `movie`.`actor` (`actorID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie`.`showTimes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `movie`.`showTimes` ;

CREATE TABLE IF NOT EXISTS `movie`.`showTimes` (
  `showTimeID` INT NOT NULL AUTO_INCREMENT,
  `resolveMoviesID` VARCHAR(45) NOT NULL,
  `time` VARCHAR(50) NOT NULL,
  INDEX `fk_showTimes_resolveMovies1_idx` (`resolveMoviesID` ASC),
  PRIMARY KEY (`showTimeID`),
  CONSTRAINT `fk_showTimes_resolveMovies1`
    FOREIGN KEY (`resolveMoviesID`)
    REFERENCES `movie`.`resolveMovies` (`resolveMoviesID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie`.`comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `movie`.`comment` ;

CREATE TABLE IF NOT EXISTS `movie`.`comment` (
  `commentID` INT NOT NULL AUTO_INCREMENT,
  `movieID` INT NOT NULL,
  `userID` INT NOT NULL,
  `comment` VARCHAR(45) NOT NULL,
  `rating` INT NOT NULL,
  INDEX `fk_comment_movies1_idx` (`movieID` ASC),
  INDEX `fk_comment_user1_idx` (`userID` ASC),
  PRIMARY KEY (`commentID`),
  CONSTRAINT `fk_comment_movies1`
    FOREIGN KEY (`movieID`)
    REFERENCES `movie`.`movies` (`movieID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_user1`
    FOREIGN KEY (`userID`)
    REFERENCES `movie`.`user` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie`.`booking`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `movie`.`booking` ;

CREATE TABLE IF NOT EXISTS `movie`.`booking` (
  `bookingID` INT NOT NULL AUTO_INCREMENT,
  `userID` INT NOT NULL,
  `noOfTicket` INT NOT NULL,
  `showTimeID` INT NOT NULL,
  `resolveMoviesID` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`bookingID`),
  INDEX `fk_booking_user1_idx` (`userID` ASC),
  INDEX `fk_booking_showTimes1_idx` (`showTimeID` ASC),
  INDEX `fk_booking_resolveMovies1_idx` (`resolveMoviesID` ASC),
  CONSTRAINT `fk_booking_user1`
    FOREIGN KEY (`userID`)
    REFERENCES `movie`.`user` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_booking_showTimes1`
    FOREIGN KEY (`showTimeID`)
    REFERENCES `movie`.`showTimes` (`showTimeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_booking_resolveMovies1`
    FOREIGN KEY (`resolveMoviesID`)
    REFERENCES `movie`.`resolveMovies` (`resolveMoviesID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
